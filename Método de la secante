
#METODO DE SECANTE
from math import *
import numpy as np
import matplotlib . pyplot as plt
def funcion1(x):
    return np.exp(x) + 2**(-x)+ 2*cos(x)-6

#Método de la secante 

l1=[]
# Se ingresan datos de entrada para los diferentes métodos 
a = 1
b = 2

# guarda valores iniciales
p0=1
p1=1.5

#Se guardan valores iniciales del error y del número de iteraciones
tol = 0.000000001  #float(input("Ingrese el valor de la tolerancia: "))
nmax = 20 #float(input("Ingrese el número máximo de iteraciones: "))
error = 100
niter = 0
# Método de  Secante 

#Se evalua de la función en los puntos a, b y m

i=1
print("# iter  \t\t P  \t\t error")
print("{0} \t\t {1:6.4f}  \t {2:6.4f}".format(i, p0, error ))

# ciclo iterativo
while error > tol and i <= nmax:
   
    fa=funcion1(p0)  
    fb=funcion1(p1)
    p = p1 - (fb*(p1-p0))/(fb-fa)
    
    error = abs(p1 - p0)
    p0=p1
    p1=p
    
    i += 1
    l1.append(error)
    print("{0} \t\t {1:15.15f} \t {2:15.15f} ".format(i, p,error ))
    

print("La raíz de la función dada en el intervalo [{0:6.4f},{1:6.4f}] es {2:15.15f}".format(a,b,p))
